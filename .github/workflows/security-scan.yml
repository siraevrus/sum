name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 4 * * *'  # Daily at 4 AM

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, dom, fileinfo, mysql, pdo_mysql, sqlite3, pdo_sqlite
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Dependencies
      run: |
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        npm ci
    
    - name: PHP Security Audit
      run: |
        echo "🔍 Running PHP security audit..."
        composer audit --format=json > security-audit.json || true
        
        # Check for known vulnerabilities
        if [ -s security-audit.json ]; then
          echo "⚠️ Security vulnerabilities found:"
          cat security-audit.json | jq -r '.advisories[] | "\(.packageName): \(.title)"' || true
        else
          echo "✅ No security vulnerabilities found in PHP dependencies"
        fi
    
    - name: Node.js Security Audit
      run: |
        echo "🔍 Running Node.js security audit..."
        npm audit --json > npm-audit.json || true
        
        # Check for known vulnerabilities
        if [ -s npm-audit.json ]; then
          VULNERABILITIES=$(cat npm-audit.json | jq -r '.vulnerabilities | length' || echo "0")
          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "⚠️ Security vulnerabilities found in Node.js dependencies:"
            cat npm-audit.json | jq -r '.vulnerabilities | to_entries[] | "\(.key): \(.value.title)"' || true
          else
            echo "✅ No security vulnerabilities found in Node.js dependencies"
          fi
        else
          echo "✅ No security vulnerabilities found in Node.js dependencies"
        fi
    
    - name: Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
    
    - name: CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: php, javascript
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
    
    - name: Upload Security Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          security-audit.json
          npm-audit.json
        retention-days: 30
    
    - name: Security Summary
      run: |
        echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # PHP Security Summary
        if [ -s security-audit.json ]; then
          PHP_VULNS=$(cat security-audit.json | jq -r '.advisories | length' || echo "0")
          echo "### PHP Dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- Vulnerabilities found: $PHP_VULNS" >> $GITHUB_STEP_SUMMARY
        else
          echo "### PHP Dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ No vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Node.js Security Summary
        if [ -s npm-audit.json ]; then
          NODE_VULNS=$(cat npm-audit.json | jq -r '.vulnerabilities | length' || echo "0")
          echo "### Node.js Dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- Vulnerabilities found: $NODE_VULNS" >> $GITHUB_STEP_SUMMARY
        else
          echo "### Node.js Dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ No vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Reports" >> $GITHUB_STEP_SUMMARY
        echo "- [Security Audit Report](security-audit.json)" >> $GITHUB_STEP_SUMMARY
        echo "- [NPM Audit Report](npm-audit.json)" >> $GITHUB_STEP_SUMMARY
