name: Deploy to Production Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          set -e
          echo "🚀 Starting deployment process..."
          
          # Navigate to project directory
          cd /var/www/html
          echo "📁 Changed to project directory: $(pwd)"
          
          # Create backup before deployment
          echo "💾 Creating backup..."
          BACKUP_DIR="/var/backups/sklad/$(date +%Y%m%d_%H%M%S)"
          mkdir -p "$BACKUP_DIR"
          cp -r /var/www/html "$BACKUP_DIR/"
          echo "✅ Backup created at: $BACKUP_DIR"
          
          # Pull latest changes
          echo "📥 Pulling latest changes from main branch..."
          git fetch origin
          git reset --hard origin/main
          echo "✅ Code updated successfully"
          
          # Install/update PHP dependencies
          echo "📦 Installing PHP dependencies..."
          composer install --no-dev --optimize-autoloader --no-interaction
          echo "✅ PHP dependencies installed"
          
          # Install/update Node dependencies and build assets
          echo "🎨 Building frontend assets..."
          npm ci --production
          npm run build
          echo "✅ Frontend assets built"
          
          # Generate application key if not exists
          echo "🔑 Generating application key..."
          if [ ! -f .env ]; then
            cp .env.example .env
          fi
          # Temporarily disable database connection for key generation
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=sqlite/' .env
          php artisan key:generate --force
          echo "✅ Application key generated"
          
          # Configure MySQL database
          echo "🗄️ Configuring MySQL database..."
          sed -i 's/DB_CONNECTION=sqlite/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=laravel/DB_DATABASE=sklad/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=sklad/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=sklad123/' .env
          echo "✅ MySQL database configured"
          
          # Run database migrations
          echo "🗄️ Running database migrations..."
          php artisan migrate --force
          echo "✅ Database migrations completed"
          
          # Clear and cache configuration
          echo "🧹 Clearing and caching configuration..."
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          php artisan cache:clear
          
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          echo "✅ Configuration cached"
          
          # Set proper permissions
          echo "🔐 Setting proper permissions..."
          chown -R www-data:www-data /var/www/html
          chmod -R 755 /var/www/html
          chmod -R 775 /var/www/html/storage
          chmod -R 775 /var/www/html/bootstrap/cache
          echo "✅ Permissions set"
          
          # Restart services
          echo "🔄 Restarting services..."
          systemctl restart nginx
          systemctl restart php8.4-fpm
          echo "✅ Services restarted"
          
          # Verify deployment
          echo "✅ Verifying deployment..."
          php artisan --version
          php artisan config:show app.name
          
          # Health check
          echo "🏥 Running health check..."
          if curl -f http://localhost > /dev/null 2>&1; then
            echo "✅ Health check passed - application is running"
          else
            echo "❌ Health check failed - application may not be running properly"
            exit 1
          fi
          
          echo "🎉 Deployment completed successfully!"
          echo "📊 Deployment summary:"
          echo "   - Code updated from main branch"
          echo "   - Dependencies installed and optimized"
          echo "   - Database migrated"
          echo "   - Configuration cached"
          echo "   - Frontend assets built"
          echo "   - Permissions set"
          echo "   - Services restarted"
          echo "   - Health check passed"
